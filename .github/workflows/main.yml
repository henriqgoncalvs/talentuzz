name: CI/CD
on:
  - push

jobs:
  code-checks:
    name: Code checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 7.9.0
      - uses: actions/setup-node@v3
        with:
          node-version: '14'
          cache: 'pnpm'
      - run: mv .env.example .env
      - run: pnpm i --frozen-lockfile
      - run: pnpm test
      - run: pnpm lint
      - run: pnpm format:check
      - run: pnpm types:check
  e2e:
    name: E2E tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 7.9.0
      - run: mv .env.example .env
      - uses: cypress-io/github-action@v4
        with:
          build: pnpm build
          start: pnpm start
  deploy:
    name: Deploy to Vercel
    environment: Production
    runs-on: ubuntu-latest
    needs: [code-checks, e2e]
    if: github.repository_owner == 'hnqg'
    permissions:
      contents: read
      deployments: write
    steps:
      - name: start deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ fromJSON('["Production", "Preview"]')[github.ref != 'refs/heads/main'] }}
      - uses: actions/checkout@v3
      - run: mv .env.example .env

      - name: deploy to vercel prod
        if: github.ref_name == 'main'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          scope: ${{ secrets.VERCEL_ORG_ID}}
          vercel-args: '--prod'
          working-directory: ./

      - name: deploy to vercel preview
        if: github.ref_name != 'main'
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          scope: ${{ secrets.VERCEL_ORG_ID}}
          working-directory: ./

      - name: update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
